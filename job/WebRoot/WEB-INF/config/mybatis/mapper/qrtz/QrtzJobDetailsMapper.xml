<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="QrtzJobDetails">

	<resultMap id="RM.QrtzJobDetails" type="com.zp.zpquartz.model.QrtzJobDetails">
        <result property="jobId" column="job_id"/>
        <result property="jobClass" column="job_class"/>
        <result property="jobName" column="job_name"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="QrtzJobDetails.columns">
	    <![CDATA[
		job_id,job_class,job_name
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="QrtzJobDetails.insert" useGeneratedKeys="true" keyProperty="jobId">
    <![CDATA[
        INSERT INTO qrtz_job_details (
        	job_id ,
        	job_class ,
        	job_name 
        ) VALUES (
        	#{jobId} ,
        	#{jobClass} ,
        	#{jobName} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="QrtzJobDetails.update" >
    <![CDATA[
        UPDATE qrtz_job_details SET
	        job_class = #{jobClass} ,
	        job_name = #{jobName} 
        WHERE 
	        job_id = #{jobId} 
    ]]>
	</update>

    <delete id="QrtzJobDetails.delete">
    <![CDATA[
        DELETE FROM qrtz_job_details WHERE
        job_id = #{id} 
    ]]>
    </delete>
    
    <select id="QrtzJobDetails.getById" resultMap="RM.QrtzJobDetails">
		SELECT <include refid="QrtzJobDetails.columns" />
	    <![CDATA[
		    FROM qrtz_job_details 
	        WHERE 
		        job_id = #{id} 
	    ]]>
	</select>
	
	<sql id="QrtzJobDetails.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(jobId)">
				AND job_id = #{jobId}
			</if>
	       <if test="@Ognl@isNotEmpty(jobClass)">
				AND job_class = #{jobClass}
			</if>
	       <if test="@Ognl@isNotEmpty(jobName)">
				AND job_name = #{jobName}
			</if>
		</where>
	</sql>
		
    <select id="QrtzJobDetails.findPage.count" resultType="long">
        SELECT count(*) FROM qrtz_job_details 
		<include refid="QrtzJobDetails.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="QrtzJobDetails.findPage" resultMap="RM.QrtzJobDetails">
    	SELECT <include refid="QrtzJobDetails.columns" />
	    FROM qrtz_job_details 
		<include refid="QrtzJobDetails.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

